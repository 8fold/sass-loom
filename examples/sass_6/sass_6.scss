/**
 * Using Sass map to improve code consolidation by removing CSS syntax.
 * 
 * The 8fold Handbook should have the design applied at this point.
 * 
 * I don't want to make things more generic or abstract until there is something
 * to gained for doing so; re-using code across multiple projects, for example.
 *
 * Note: Folder structure for @use not maintained in example.
 *
 * Sass file size: 9 | ~380 lines
 *
 * CSS files sizes (in kilobytes):
 *
 * - Minified + compressed: 2
 * - Minified: 6
 * - Uncompressed: 9
 *
 */

@use "sass/handbook" with(
  $variables: (
    "screens": (
      "size": (
        "min": 320
      )
    ),

    "fonts": (
      "size": (
        "min": 10
      ),
      "families": (
        "header": '"Montserrat", "Trebuchet MS", Helvetica, sans-serif',
        "body"  : '"Open Sans", Helvetica, Verdana, sans-serif'
      ),
      "weights": (
        "500": 500
      )
    ),

    "colors": (
      "purples": (
        hsl(298,100%,31%)
        hsl(298,92%,43%)
      ),
      "grays": (
        hsl(202,19%,19%),
        hsl(202,19%,30%),
        hsl(202,2%,95%),
        hsl(202,2%,99%)
      )
    ),

    "assets": (
      "logo": url("/assets/ui/logo.svg"),
      "icon": (
        "new-window" : '\29C9',
        "plus"       : '"+"',
        "minus"      : '"-"'
      )
    )
  )
);

:root {
  @include handbook.variables(
    (head-font, (fonts, families, header)),
    (body-font, (fonts, families, body)),
    (bold-font, (fonts, weights, "500")),
    (3xl-font,  handbook.font-size(3.2, 4)),
    (2xl-font,  handbook.font-size(3, 3.5)), // new size
    (xl-font,   handbook.font-size(2.5, 3)), // new size
    (l-font,    handbook.font-size(2, 2.5)),
    (m-font,    handbook.font-size(1.6, 1.8)),
    (s-font,    handbook.font-size(1.3, 1.5)),
    (xs-font,   handbook.font-size(1, 1.4)),

    (ef-key,           (colors, purples, 2)),
    (ef-gray-darkest,  (colors, grays, 1)),
    (ef-gray-darker,   (colors, grays, 2)),
    (ef-gray-lightest, (colors, grays, 4)),

    (logo,        (assets, logo)),
    (logo-height, 'var(--122-px)'),

    (icon-new-window, (assets, icon, new-window)),
    (icon-plus,       (assets, icon, plus)),
    (icon-minus,      (assets, icon, minus)),

    (l-line-height,   handbook.line-height(3xl-font, 1)),
    (m-line-height,   handbook.line-height(m-font, 1.62)),
    (s-line-height,   handbook.line-height(s-font, 1.25)),

    (0-spacer,          handbook.numberWithUnit(0)),
    (xl-spacer,         handbook.numberWithUnit(4, rem)),
    (l-spacer,          handbook.numberWithUnit(2, rem)),
    (m-spacer,          handbook.numberWithUnit(1, rem)),
    (s-spacer,          handbook.numberWithUnit(0.75, rem)),
    (xs-spacer,         handbook.numberWithUnit(0.5, rem)),
    (2xs-spacer,        handbook.numberWithUnit(0.25, rem)),
    (3xs-spacer,        handbook.numberWithUnit(0.1, rem)),
    (icon-lift-spacer,  handbook.numberWithUnit(-0.5, rem)),
    (off-screen-spacer, handbook.numberWithUnit(-999, em)),
    (122-px,            handbook.numberWithUnit(122, px)),
    (neg-2-px,          handbook.numberWithUnit(-2, px)),
    (fr-1,              handbook.numberWithUnit(1, fr)),
    (vw-0,              handbook.numberWithUnit(0, vw)),
    (100-percent,       handbook.numberWithUnit(100, '%')),

    (line-length, handbook.numberWithUnit(70, ch)), // use character count for width
    (list-indent, handbook.numberWithUnit(2, ch)),

    (transition-color,    'color ' + handbook.numberWithUnit(0.25, 's')),
    (transition-bg-color, 'background-color ' + handbook.numberWithUnit(0.25, 's')),

    (table-max, handbook.numberWithUnit(60, ch)),
    (table-min, handbook.numberWithUnit(55, ch)),

    (margin-centered,   'var(--0-spacer) var(--auto)'),
    (true-center,       'var(--center) var(--center)'),

    (grid-columns-2, "'1 2'"),
    (1, '1')
  );

  @include handbook.keywords(
    none,
    transparent,
    collapse,
    pointer,
    center,
    left,
    solid,
    auto,
    block,
    inline-block,
    grid,
    absolute,
    relative,
    no-repeat,
    smooth,
    scroll
  );
}

html {
  scroll-behavior: var(--smooth); // not available in Safari - graceful degredation
}

body {
  min-height: var(--vw-0); // FIX: Safari 14 using vw with min, max, and clamp
  max-width: var(--line-length);

  margin: var(--margin-centered);

  background: var(--ef-gray-lightest);

  color: var(--ef-gray-darkest);
  font-family: var(--body-font);
  font-size: var(--m-font);
  line-height: var(--m-line-height);
}

a, button {
  font-weight: var(--bold-font);
}

a:hover, button:hover, select:hover {
  cursor: var(--pointer);
}

a {
  text-decoration: var(--none);
  font-weight: var(--bold-font);
  color: var(--ef-key);

  transition: var(--transition-color);
  &:hover {
    color: var(--ef-gray-darker);
  }
}

button {
  background: var(--ef-key);
  border: var(--none);
  color: var(--ef-gray-lightest);
  transition: var(--transition-bg-color);
  font-size: var(--m-font);

  &:hover {
    background: var(--ef-gray-darker);
  }
}

h2.toc-heading {
  margin-bottom: var(--0-spacer);
}

ul.table-of-contents {
  margin-top: var(--s-spacer);
  padding-left: var(--list-indent);
  font-size: var(--s-font);
  line-height: var(--s-line-height);
}

[is="table-container"] {
  overflow-x: var(--scroll);
}

[rel~="noreferrer"]:after {
  content: var(--icon-new-window);
  display: var(--inline-block);
  margin-left: var(--2xs-spacer);
  position: var(--relative);
  top: var(--icon-lift-spacer);
}

[is="accordion"] {
  margin: var(--0-spacer);
  padding: var(--0-spacer);

  &:first-of-type {
    margin-top: var(--m-spacer);
  }

  & > button {
    margin-top: var(--m-spacer);
    margin-bottom: var(--0-spacer);
    padding: var(--m-spacer);

    width: var(--100-percent);

    font-size: var(--l-spacer);
    text-align: var(--left);

    &:before {
      margin-right: var(--xs-spacer);
      content: var(--icon-plus);
      font-size: var(--xl-font);
    }

    &[aria-expanded="true"]:before {
      content: var(--icon-minus);
    }
  }

  & + div[aria-hidden="true"] {
    display: var(--none);
  }

  & + div[aria-hidden="false"] {
    padding: var(--m-spacer);
    margin-top: var(--neg-2-px);
    border: var(--2xs-spacer) var(--solid) var(--ef-key);

    & > ul:first-of-type {
      margin-top: var(--0-spacer);
    }
  }
}

header > nav > a {
  display: var(--inline-block);

  margin: var(--xl-spacer) var(--margin-auto);
  padding: var(--0-spacer);

  width: var(--100-percent);
  height: var(--logo-height);

  background-image: var(--logo);
  background-position: var(--true-center);
  background-repeat: var(--no-repeat);

  &:hover {
    filter: invert(26%) sepia(98%) saturate(4247%) hue-rotate(286deg) brightness(87%) contrast(122%);
  }

  & > span {
    position: var(--absolute);
    left: var(--off-screen-spacer);
  }
}

body > #main-nav-form {
  text-align: var(--center);

  & label {
    display: var(--inline-block);
    margin-right: var(--m-spacer);
  }

  & select {
    appearance: var(--none);
    border-radius: var(--0-spacer);
    border: var(--none);
    border-bottom: var(--3xs-spacer) var(--solid) var(--ef-key);
    background: var(--transparent);
    color: var(--ef-key);

    font-size: var(--m-font);
  }

  & button {
    position: var(--relative);
    top: var(--2xs-spacer);

    margin: var(--0-spacer) var(--m-spacer);
    padding: var(--2xs-spacer) var(--m-spacer);
    border-radius: var(--xs-spacer);
  }
}

h1, h2, h3, h4, h5, h6 {
  margin-top: var(--xl-spacer);
  font-family: var(--head-font);
  font-size: var(--3xl-font);
  line-height: var(--l-line-height);
}

h1 {
  margin-top: var(--m-spacer);
}

h2 {
  font-size: var(--2xl-font);
}

h3, h4, h5, h6 {
  font-size: var(--xl-font);
  text-align: var(--center);
}

main {
  margin: var(--0-spacer) var(--xs-spacer);
  padding-top: var(--l-spacer);

  & .heading-permalink {
    display: var(--inline-block);
    margin-right: var(--2xs-spacer);
  }

  table {
    margin: var(--0-spacer) var(--auto);
    border-collapse: var(--collapse);
    border: var(--3xs-spacer) var(--solid) var(--ef-gray-darker);
    max-width: var(--table-max);
    min-width: var(--table-min);

    font-size: var(--s-font);

    th, td {
      padding: var(--xs-spacer);
      border-bottom: var(--3xs-spacer) var(--solid) var(--ef-gray-darker);
    }
  }
}

nav.next-previous {
  margin: var(--xl-spacer) var(--auto) var(--l-spacer);
  @media screen and (min-width: 720px) { // CSS var here doesn't seem to work
      display: var(--grid);
      grid-gap: var(--xl-spacer);
      grid-template-columns: var(--fr-1) var(--fr-1);
      grid-template-areas: var(--grid-columns-2);
  }

  & > a {
    display: var(--block);
    margin: var(--m-spacer);
    padding: var(--xs-spacer) var(--m-spacer);
    border: var(--2xs-spacer) var(--solid) var(--ef-key);
    border-radius: var(--xs-spacer);

    text-align: var(--center);

    transition: var(--transition-color), var(--transition-bg-color);

    &.previous {
      grid-area: var(--1);
    }

    &:hover {
      color: var(--ef-gray-lightest);
      background-color: var(--ef-key);
    }
  }
}

footer {
  & > p {
    text-align: var(--center);
    font-size: var(--xs-font);
  }
}
